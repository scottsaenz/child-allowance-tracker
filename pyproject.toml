[project]
name = "child-allowance-tracker"
version = "0.1.0"
description = "A web application to track children's allowances and chores"
readme = "README.md"
requires-python = ">=3.12"
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
dependencies = [
    "fastapi>=0.104.0",
    "mangum>=0.17.0",
    "aws-lambda-powertools>=2.25.0",
    "aws-xray-sdk>=2.12.0",
    "boto3>=1.26.0",
    "pydantic>=2.5.0",
    "pydantic-core>=2.14.0",
    "google-auth>=2.17.0",
    "google-auth-oauthlib>=1.0.0",
    "google-auth-httplib2>=0.2.0",
    "google-api-python-client>=2.88.0",
    "python-dotenv>=1.0.0",
    "uvicorn[standard]>=0.24.0",
    "ruff>=0.11.0",
    # OAuth dependencies
    "authlib>=1.2.0",
    "python-jose[cryptography]>=3.3.0",
    "python-multipart>=0.0.6",
    "itsdangerous>=2.1.0",
    # Testing dependencies
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.24.0",
    "pytest-mock>=3.10.0",
    "freezegun>=1.2.0",
    "pytest-cov>=4.0.0",
    "mcp>=1.9.4",
]

[project.optional-dependencies]
dev = [
    "pre-commit>=3.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# Fix the package discovery issue
[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/pyproject.toml"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
pythonpath = ["src"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
]
asyncio_mode = "auto"

[tool.ruff]
line-length = 88
target-version = "py312"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "*/tests/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
